// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package managercenter

import (
	"bytes"
	"fmt"
	//"git.apache.org/thrift.git/lib/go/thrift"
	"github.com/apache/thrift/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

type Manager struct {
	Id           int32  `thrift:"id,1" json:"id"`
	Email        string `thrift:"email,2" json:"email"`
	Password     string `thrift:"password,3" json:"password"`
	Nickname     string `thrift:"nickname,4" json:"nickname"`
	Ename        string `thrift:"ename,5" json:"ename"`
	Logo         string `thrift:"logo,6" json:"logo"`
	Status       int32  `thrift:"status,7" json:"status"`
	DepartmentId int32  `thrift:"department_id,8" json:"department_id"`
	PositionId   int32  `thrift:"position_id,9" json:"position_id"`
	RoleId       int32  `thrift:"role_id,10" json:"role_id"`
	Creator      string `thrift:"creator,11" json:"creator"`
	Createtime   string `thrift:"createtime,12" json:"createtime"`
	Logintime    string `thrift:"logintime,13" json:"logintime"`
	Loginip      string `thrift:"loginip,14" json:"loginip"`
}

func NewManager() *Manager {
	return &Manager{}
}

func (p *Manager) GetId() int32 {
	return p.Id
}

func (p *Manager) GetEmail() string {
	return p.Email
}

func (p *Manager) GetPassword() string {
	return p.Password
}

func (p *Manager) GetNickname() string {
	return p.Nickname
}

func (p *Manager) GetEname() string {
	return p.Ename
}

func (p *Manager) GetLogo() string {
	return p.Logo
}

func (p *Manager) GetStatus() int32 {
	return p.Status
}

func (p *Manager) GetDepartmentId() int32 {
	return p.DepartmentId
}

func (p *Manager) GetPositionId() int32 {
	return p.PositionId
}

func (p *Manager) GetRoleId() int32 {
	return p.RoleId
}

func (p *Manager) GetCreator() string {
	return p.Creator
}

func (p *Manager) GetCreatetime() string {
	return p.Createtime
}

func (p *Manager) GetLogintime() string {
	return p.Logintime
}

func (p *Manager) GetLoginip() string {
	return p.Loginip
}
func (p *Manager) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.ReadField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.ReadField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.ReadField14(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Manager) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Id = v
	}
	return nil
}

func (p *Manager) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *Manager) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.Password = v
	}
	return nil
}

func (p *Manager) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.Nickname = v
	}
	return nil
}

func (p *Manager) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.Ename = v
	}
	return nil
}

func (p *Manager) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.Logo = v
	}
	return nil
}

func (p *Manager) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 7: %s", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *Manager) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 8: %s", err)
	} else {
		p.DepartmentId = v
	}
	return nil
}

func (p *Manager) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 9: %s", err)
	} else {
		p.PositionId = v
	}
	return nil
}

func (p *Manager) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 10: %s", err)
	} else {
		p.RoleId = v
	}
	return nil
}

func (p *Manager) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 11: %s", err)
	} else {
		p.Creator = v
	}
	return nil
}

func (p *Manager) ReadField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 12: %s", err)
	} else {
		p.Createtime = v
	}
	return nil
}

func (p *Manager) ReadField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 13: %s", err)
	} else {
		p.Logintime = v
	}
	return nil
}

func (p *Manager) ReadField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 14: %s", err)
	} else {
		p.Loginip = v
	}
	return nil
}

func (p *Manager) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Manager"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *Manager) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Id)); err != nil {
		return fmt.Errorf("%T.id (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:id: %s", p, err)
	}
	return err
}

func (p *Manager) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:email: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return fmt.Errorf("%T.email (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:email: %s", p, err)
	}
	return err
}

func (p *Manager) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("password", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:password: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Password)); err != nil {
		return fmt.Errorf("%T.password (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:password: %s", p, err)
	}
	return err
}

func (p *Manager) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("nickname", thrift.STRING, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:nickname: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Nickname)); err != nil {
		return fmt.Errorf("%T.nickname (4) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:nickname: %s", p, err)
	}
	return err
}

func (p *Manager) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ename", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:ename: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Ename)); err != nil {
		return fmt.Errorf("%T.ename (5) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:ename: %s", p, err)
	}
	return err
}

func (p *Manager) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("logo", thrift.STRING, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:logo: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Logo)); err != nil {
		return fmt.Errorf("%T.logo (6) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:logo: %s", p, err)
	}
	return err
}

func (p *Manager) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:status: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return fmt.Errorf("%T.status (7) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:status: %s", p, err)
	}
	return err
}

func (p *Manager) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("department_id", thrift.I32, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:department_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.DepartmentId)); err != nil {
		return fmt.Errorf("%T.department_id (8) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:department_id: %s", p, err)
	}
	return err
}

func (p *Manager) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("position_id", thrift.I32, 9); err != nil {
		return fmt.Errorf("%T write field begin error 9:position_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.PositionId)); err != nil {
		return fmt.Errorf("%T.position_id (9) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 9:position_id: %s", p, err)
	}
	return err
}

func (p *Manager) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("role_id", thrift.I32, 10); err != nil {
		return fmt.Errorf("%T write field begin error 10:role_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.RoleId)); err != nil {
		return fmt.Errorf("%T.role_id (10) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 10:role_id: %s", p, err)
	}
	return err
}

func (p *Manager) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("creator", thrift.STRING, 11); err != nil {
		return fmt.Errorf("%T write field begin error 11:creator: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Creator)); err != nil {
		return fmt.Errorf("%T.creator (11) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 11:creator: %s", p, err)
	}
	return err
}

func (p *Manager) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("createtime", thrift.STRING, 12); err != nil {
		return fmt.Errorf("%T write field begin error 12:createtime: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Createtime)); err != nil {
		return fmt.Errorf("%T.createtime (12) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 12:createtime: %s", p, err)
	}
	return err
}

func (p *Manager) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("logintime", thrift.STRING, 13); err != nil {
		return fmt.Errorf("%T write field begin error 13:logintime: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Logintime)); err != nil {
		return fmt.Errorf("%T.logintime (13) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 13:logintime: %s", p, err)
	}
	return err
}

func (p *Manager) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("loginip", thrift.STRING, 14); err != nil {
		return fmt.Errorf("%T write field begin error 14:loginip: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Loginip)); err != nil {
		return fmt.Errorf("%T.loginip (14) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 14:loginip: %s", p, err)
	}
	return err
}

func (p *Manager) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Manager(%+v)", *p)
}

type ManagerInfo struct {
	Id         int32  `thrift:"id,1" json:"id"`
	Email      string `thrift:"email,2" json:"email"`
	Tel        string `thrift:"tel,3" json:"tel"`
	Mobile     string `thrift:"mobile,4" json:"mobile"`
	Sex        int32  `thrift:"sex,5" json:"sex"`
	Address    string `thrift:"address,6" json:"address"`
	Qq         string `thrift:"qq,7" json:"qq"`
	Updatetime string `thrift:"updatetime,8" json:"updatetime"`
}

func NewManagerInfo() *ManagerInfo {
	return &ManagerInfo{}
}

func (p *ManagerInfo) GetId() int32 {
	return p.Id
}

func (p *ManagerInfo) GetEmail() string {
	return p.Email
}

func (p *ManagerInfo) GetTel() string {
	return p.Tel
}

func (p *ManagerInfo) GetMobile() string {
	return p.Mobile
}

func (p *ManagerInfo) GetSex() int32 {
	return p.Sex
}

func (p *ManagerInfo) GetAddress() string {
	return p.Address
}

func (p *ManagerInfo) GetQq() string {
	return p.Qq
}

func (p *ManagerInfo) GetUpdatetime() string {
	return p.Updatetime
}
func (p *ManagerInfo) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *ManagerInfo) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Id = v
	}
	return nil
}

func (p *ManagerInfo) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *ManagerInfo) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.Tel = v
	}
	return nil
}

func (p *ManagerInfo) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.Mobile = v
	}
	return nil
}

func (p *ManagerInfo) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.Sex = v
	}
	return nil
}

func (p *ManagerInfo) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.Address = v
	}
	return nil
}

func (p *ManagerInfo) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 7: %s", err)
	} else {
		p.Qq = v
	}
	return nil
}

func (p *ManagerInfo) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 8: %s", err)
	} else {
		p.Updatetime = v
	}
	return nil
}

func (p *ManagerInfo) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ManagerInfo"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *ManagerInfo) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Id)); err != nil {
		return fmt.Errorf("%T.id (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:id: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:email: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return fmt.Errorf("%T.email (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:email: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("tel", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:tel: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Tel)); err != nil {
		return fmt.Errorf("%T.tel (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:tel: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("mobile", thrift.STRING, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:mobile: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Mobile)); err != nil {
		return fmt.Errorf("%T.mobile (4) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:mobile: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sex", thrift.I32, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:sex: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Sex)); err != nil {
		return fmt.Errorf("%T.sex (5) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:sex: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("address", thrift.STRING, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:address: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Address)); err != nil {
		return fmt.Errorf("%T.address (6) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:address: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("qq", thrift.STRING, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:qq: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Qq)); err != nil {
		return fmt.Errorf("%T.qq (7) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:qq: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("updatetime", thrift.STRING, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:updatetime: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Updatetime)); err != nil {
		return fmt.Errorf("%T.updatetime (8) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:updatetime: %s", p, err)
	}
	return err
}

func (p *ManagerInfo) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ManagerInfo(%+v)", *p)
}

type Department struct {
	Id          int32  `thrift:"id,1" json:"id"`
	Name        string `thrift:"name,2" json:"name"`
	Code        string `thrift:"code,3" json:"code"`
	TypeA1      int32  `thrift:"type,4" json:"type"`
	LeaderEmail string `thrift:"leader_email,5" json:"leader_email"`
	SuperId     int32  `thrift:"super_id,6" json:"super_id"`
	Creator     string `thrift:"creator,7" json:"creator"`
	Createtime  string `thrift:"createtime,8" json:"createtime"`
	Updator     string `thrift:"updator,9" json:"updator"`
	Updatetime  string `thrift:"updatetime,10" json:"updatetime"`
}

func NewDepartment() *Department {
	return &Department{}
}

func (p *Department) GetId() int32 {
	return p.Id
}

func (p *Department) GetName() string {
	return p.Name
}

func (p *Department) GetCode() string {
	return p.Code
}

func (p *Department) GetTypeA1() int32 {
	return p.TypeA1
}

func (p *Department) GetLeaderEmail() string {
	return p.LeaderEmail
}

func (p *Department) GetSuperId() int32 {
	return p.SuperId
}

func (p *Department) GetCreator() string {
	return p.Creator
}

func (p *Department) GetCreatetime() string {
	return p.Createtime
}

func (p *Department) GetUpdator() string {
	return p.Updator
}

func (p *Department) GetUpdatetime() string {
	return p.Updatetime
}
func (p *Department) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Department) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Id = v
	}
	return nil
}

func (p *Department) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *Department) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.Code = v
	}
	return nil
}

func (p *Department) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.TypeA1 = v
	}
	return nil
}

func (p *Department) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.LeaderEmail = v
	}
	return nil
}

func (p *Department) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.SuperId = v
	}
	return nil
}

func (p *Department) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 7: %s", err)
	} else {
		p.Creator = v
	}
	return nil
}

func (p *Department) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 8: %s", err)
	} else {
		p.Createtime = v
	}
	return nil
}

func (p *Department) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 9: %s", err)
	} else {
		p.Updator = v
	}
	return nil
}

func (p *Department) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 10: %s", err)
	} else {
		p.Updatetime = v
	}
	return nil
}

func (p *Department) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Department"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *Department) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Id)); err != nil {
		return fmt.Errorf("%T.id (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:id: %s", p, err)
	}
	return err
}

func (p *Department) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("name", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:name: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return fmt.Errorf("%T.name (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:name: %s", p, err)
	}
	return err
}

func (p *Department) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("code", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:code: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Code)); err != nil {
		return fmt.Errorf("%T.code (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:code: %s", p, err)
	}
	return err
}

func (p *Department) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("type", thrift.I32, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:type: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.TypeA1)); err != nil {
		return fmt.Errorf("%T.type (4) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:type: %s", p, err)
	}
	return err
}

func (p *Department) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("leader_email", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:leader_email: %s", p, err)
	}
	if err := oprot.WriteString(string(p.LeaderEmail)); err != nil {
		return fmt.Errorf("%T.leader_email (5) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:leader_email: %s", p, err)
	}
	return err
}

func (p *Department) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("super_id", thrift.I32, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:super_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.SuperId)); err != nil {
		return fmt.Errorf("%T.super_id (6) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:super_id: %s", p, err)
	}
	return err
}

func (p *Department) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("creator", thrift.STRING, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:creator: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Creator)); err != nil {
		return fmt.Errorf("%T.creator (7) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:creator: %s", p, err)
	}
	return err
}

func (p *Department) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("createtime", thrift.STRING, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:createtime: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Createtime)); err != nil {
		return fmt.Errorf("%T.createtime (8) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:createtime: %s", p, err)
	}
	return err
}

func (p *Department) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("updator", thrift.STRING, 9); err != nil {
		return fmt.Errorf("%T write field begin error 9:updator: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Updator)); err != nil {
		return fmt.Errorf("%T.updator (9) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 9:updator: %s", p, err)
	}
	return err
}

func (p *Department) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("updatetime", thrift.STRING, 10); err != nil {
		return fmt.Errorf("%T write field begin error 10:updatetime: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Updatetime)); err != nil {
		return fmt.Errorf("%T.updatetime (10) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 10:updatetime: %s", p, err)
	}
	return err
}

func (p *Department) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Department(%+v)", *p)
}
